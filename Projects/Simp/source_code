#include <math.h>
#include "rgb_lcd.h"

#include "Ultrasonic.h"


int GLED = 13;  //Green LED
int RLED = 9;   //Red LED

rgb_lcd lcd;

const int colorR = 255;
const int colorG = 255;
const int colorB = 255;

const int B = 4275;           // B value of the thermistor
const int R0 = 100000;        // R0 = 100k
const int TempSensor = A0;    // Grove - Temperature Sensor connect to A0

Ultrasonic ultrasonic(7);              //identify the digital pin

void setup()
{
  //Initialize LED
  pinMode (GLED, OUTPUT);    //initialize PWM pin 13 as green led output
  pinMode (RLED, OUTPUT);    //initialize PWM pin 9 as red led  output

  //Set the background colour and text
  lcd.begin(16, 2);
  lcd.setRGB(colorR, colorG, colorB);
  delay(1000);

  
}

void loop()
{
    
    // Ultrasonic Parameters
    long RangeInCentimeters;
    RangeInCentimeters = ultrasonic.MeasureInCentimeters();

    // Temp Sensor Parameters
    int a = analogRead(TempSensor);
    float R = (1023.0/a-1.0)*R0;

    // Temp Sensor Parameters
    // convert to deg C via datasheet
    float temperature = 1.0/(log(R/R0)/B+1/298.15)-273.15; 

    // If-else statement conditions
    if(RangeInCentimeters>400)
    {
      if(temperature>23)
      {
            //RED LED Blink
            digitalWrite (RLED, HIGH);   //turn LED ON->pull voltage up to 5V 
            delay(100);     //wait for 100ms = 0.1 sec
            digitalWrite (RLED, LOW);  //turn LED OFF->pull voltage down to 0V
            delay(100);

            //Print following message
            lcd.setCursor(0, 1);      // 0=Column, 1=Row
            lcd.print("Temp Alert!");

            //Green LED Blink
            digitalWrite (GLED, HIGH);   //turn LED ON->pull voltage up to 5V 
            delay(100);     //wait for 100ms = 0.1 sec
            digitalWrite (GLED, LOW);  //turn LED OFF->pull voltage down to 0V
            delay(100);

            //Print following message
            lcd.setCursor(0, 0);      // 0=Column, 1=Row
            lcd.print("Distance Alert!");
       }
    }
    else if (RangeInCentimeters<400)
    {
      lcd.clear();
      lcd.print("Dist:");
      lcd.setCursor(6, 0);      // 0=Column, 1=Row
      lcd.print(RangeInCentimeters);

      //RED LED Blink
      digitalWrite (RLED, HIGH);   //turn LED ON->pull voltage up to 5V 
      delay(10);     //wait for 100ms = 0.1 sec
      digitalWrite (RLED, LOW);  //turn LED OFF->pull voltage down to 0V
      delay(10);

      //Print following message
      lcd.setCursor(0, 1);      // 0=Column, 1=Row
      lcd.print("Temp Alert!");

      //Scroll left
      for (int positionCounter = 0; positionCounter < 13; positionCounter++)
      {
        // scroll one position left:
        lcd.scrollDisplayLeft();
        // wait a bit:
        delay(150);
      }

      // scroll right 29 positions (string length + display length) to move offscreen 
      for (int positionCounter = 0; positionCounter < 29; positionCounter++) 
      {
        // scroll one position right:
        lcd.scrollDisplayRight();
        // wait a bit:
        delay(150);
        
        }
            // scroll left 16 (display length + string length) to move it back to start
      for (int positionCounter = 0; positionCounter < 16; positionCounter++) 
      {
        // scroll one position left:
        lcd.scrollDisplayLeft();
        // wait a bit:
        delay(150);
      }
      
    }
    else if (temperature<23)
    {
      //Green LED Blink
      digitalWrite (GLED, HIGH);   //turn LED ON->pull voltage up to 5V 
      delay(100);     //wait for 100ms = 0.1 sec
      digitalWrite (GLED, LOW);  //turn LED OFF->pull voltage down to 0V
      delay(100);
      
      //Print following message
      lcd.setCursor(0, 0);      // 0=Column, 1=Row
      lcd.print("Distance Alert!");  

      lcd.setCursor(0, 1);      // 0=Column, 1=Row
      lcd.print("Temp:");
      lcd.setCursor(6, 1);      // 0=Column, 1=Row
      lcd.print(temperature);
      
      //Scroll left
      for (int positionCounter = 0; positionCounter < 13; positionCounter++)
      {
        // scroll one position left:
        lcd.scrollDisplayLeft();
        // wait a bit:
        delay(150);
      }

      // scroll right 29 positions (string length + display length) to move offscreen 
      for (int positionCounter = 0; positionCounter < 29; positionCounter++) 
      {
        // scroll one position right:
        lcd.scrollDisplayRight();
        // wait a bit:
        delay(150);
        
        }
            // scroll left 16 (display length + string length) to move it back to start
      for (int positionCounter = 0; positionCounter < 16; positionCounter++) 
      {
        // scroll one position left:
        lcd.scrollDisplayLeft();
        // wait a bit:
        delay(150);
      }
    }
   
}
